{"mappings":"AAEA,MAGMA,EAAYC,SAASC,cAAc,iBACnCC,EAAWF,SAASC,cAAc,gBAClCE,EAASH,SAASC,cAAc,YAChCG,EAAK,ICRJ,MAEHC,YAAYC,GAERC,KAAKC,QAAU,CAAC,EAChBD,KAAKE,QAAUH,CAEnB,CAEAI,MAAMC,EAAMC,GACRL,KAAKM,SAAWF,EAChBJ,KAAKO,OAASF,EACdL,KAAKQ,GAAK,IAAIC,UAAU,iDAAiDT,KAAKO,eAAeP,KAAKM,WACtG,CAEAI,eACIV,KAAKE,QAAQF,KAAKC,QACtB,CAEAU,OAEA,ID+CJ,SAAwBC,GAlDJ,EAACR,EAAMH,KACnB,MAAMY,EAAapB,SAASqB,cAAc,KAC1CD,EAAWE,YAAc,GAAGX,MAASH,IACrCT,EAAUwB,OAAOH,EAAA,EAgDjBI,CAAY,QAASL,EAC7B,IA5DMM,EAAcC,OAAOC,SAASC,OAC9BC,EAAY,IAAIC,gBAAgBL,GAEtCvB,EAASoB,YAAcO,EAAUE,IAAI,UAVlB,cADF,oBAYjB,MAAMC,EAASH,EAAUE,IAAI,UAAYF,EAAUI,IAAI,UEKnC,EAACC,EAAO,KAC1BC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,CAACC,EAAIC,IAGrDD,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,KAGP,IFlB8D,GAoCjDxC,SAASC,cAAc,YAC/B0C,iBAAiB,UAXXC,IACRA,EAAEC,iBACF,MAAMlC,EAAOiC,EAAEE,OAAOC,SAASpC,KAAKqC,MAAMC,OAC9B,KAATtC,IAEHR,EAAO+C,UAAUC,OAAO,UACxB/C,EAAGM,MAAMC,EAAMqB,GAAA,IAOvB,MAAMoB,EAAWpD,SAASC,cAAc,aACxCmD,EAAST,iBAAiB,WAAWU,IACjC,GAAe,UAAZA,EAAIC,IAAiB,CACpBD,EAAIR,iBACJ,MAAMrC,EAAU4C,EAAS9B,YAAY2B,OACrB,KAAZzC,IAISW,EAJmBX,EAKhC+C,QAAQC,IAAIrC,GACZiC,EAAS9B,YAAc,GACvBlB,EAAGc,KAAKC,GAPiC,CAIjD,IAAqBA,CAJ4B","sources":["src/js/index.js","src/js/websocket.js","node_modules/nanoid/index.browser.js"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport { WS } from './websocket';\nconst NEW_CHAT = 'Создать новый чат';\nconst LOGIN_CHAT = 'Войти в чат';\nconst BASE_URL = 'ws://tranquil-reaches-58824.herokuapp.com/'\nconst chatFrame = document.querySelector('#historyframe');\nconst loginBtn = document.querySelector('.logform-btn');\nconst dialog = document.querySelector('.overlay');\nconst ws = new WS(messageHandler);\n\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\n\nloginBtn.textContent = urlParams.has('chatid') ? LOGIN_CHAT : NEW_CHAT;\nconst chatID = urlParams.has('chatid') ? urlParams.get('chatid') : nanoid();\n\n\n\nconst postMessage = (name, message) => {\n        const newmessage = document.createElement(\"p\");\n        newmessage.textContent = `${name}: ${message}`;\n        chatFrame.append(newmessage);\n}\n/* const makeSocket = (name, ID) => {\n        ws.login(name, ID)\n        ws = new WebSocket(`${BASE_URL}?id=${chatID}&name=${name}`);\n        ws.onopen = () => {\n                console.log('connected')\n                isOnline = true;\n            };\n        ws.onclose = () => {\n                console.log('dis-connected')\n                isOnline = false;\n            };\n        ws.onmessage = response => {\n                const info = JSON.parse(response.data);\n                postMessage('Vasja', info);\n        }\n} */\n\nconst onLogin = e => {\n        e.preventDefault();\n        const name = e.target.elements.name.value.trim();\n        if(name === '') {return;}\n        \n        dialog.classList.toggle('hidden');\n        ws.login(name, chatID);\n        \n}\n\nconst loginForm = document.querySelector('.logform');\nloginForm.addEventListener('submit', onLogin);\n\nconst typearea = document.querySelector('#typearea');\ntypearea.addEventListener('keydown', evt => {\n    if(evt.key === 'Enter') {\n        evt.preventDefault();\n        const message = typearea.textContent.trim();\n        if( message !== \"\") sendMessage(message);}\n})\n\n\nfunction sendMessage(m) {\n        console.log(m);\n        typearea.textContent = '';\n        ws.send(m)\n}\n\nfunction messageHandler(m) {\n        postMessage('Vasja', m);\n}\n","export class WS {\n\n    constructor(messageHandler) {\n\n        this.message = {};\n        this.handler = messageHandler;\n        \n    }\n\n    login(name, ID) {\n        this.userName = name;\n        this.chatID = ID;\n        this.ws = new WebSocket(`ws://tranquil-reaches-58824.herokuapp.com/?id=${this.chatID}&name=${this.userName}`);\n    }\n\n    onGetMessage() {\n        this.handler(this.message);\n    }\n\n    send() {\n\n    }\n\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["$8f6a480bb40b134f$var$chatFrame","document","querySelector","$8f6a480bb40b134f$var$loginBtn","$8f6a480bb40b134f$var$dialog","$8f6a480bb40b134f$var$ws","constructor","messageHandler","this","message","handler","login","name","ID","userName","chatID","ws","WebSocket","onGetMessage","send","m","newmessage","createElement","textContent","append","$8f6a480bb40b134f$var$postMessage","$8f6a480bb40b134f$var$queryString","window","location","search","$8f6a480bb40b134f$var$urlParams","URLSearchParams","has","$8f6a480bb40b134f$var$chatID","get","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","addEventListener","e","preventDefault","target","elements","value","trim","classList","toggle","$8f6a480bb40b134f$var$typearea","evt","key","console","log"],"version":3,"file":"index.b08b9e78.js.map"}