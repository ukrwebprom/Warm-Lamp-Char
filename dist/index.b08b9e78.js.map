{"mappings":"AAEA,MAGMA,EAAYC,SAASC,cAAc,iBACnCC,EAAWF,SAASC,cAAc,gBAClCE,EAASH,SAASC,cAAc,YAChCG,EAAK,ICRJ,MAEHC,YAAYC,GAERC,KAAKC,QAAU,CAAC,EAChBD,KAAKE,QAAUH,CAEnB,CAEAI,MAAMC,EAAMC,GACRL,KAAKM,SAAWF,EAChBJ,KAAKO,OAASF,EACdL,KAAKQ,GAAK,IAAIC,UAAU,iDAAiDT,KAAKO,eAAeP,KAAKM,WACtG,CAEAI,eACIV,KAAKE,QAAQF,KAAKC,QACtB,CAEAU,OAEA,I,YDHgB,EAACP,EAAMH,KACnB,MAAMW,EAAanB,SAASoB,cAAc,KAC1CD,EAAWE,YAAc,GAAGV,MAASH,IACrCT,EAAUuB,OAAOH,EAAA,E,eAXnBI,EAAcC,OAAOC,SAASC,OAC9BC,EAAY,IAAIC,gBAAgBL,GAEtCrB,EAASmB,YAAcM,EAAUE,IAAI,UAVlB,cADF,oBAYjB,MAAMC,EAASH,EAAUE,IAAI,UAAYF,EAAUI,IAAI,UEKnC,EAACC,EAAO,KAC1BC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,CAACC,EAAIC,IAGrDD,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,KAGP,IFlB8D,GAsD1DtC,SAAkBC,cAAA,YACnBwC,iBAAqB,UAXqBC,IAClDA,EAAAC,iBAGA,MAAShC,EAAA+B,EAAAE,OAAAC,SAAAlC,KAAAmC,MAAeC,OACJ,KAAZpC,IACAR,EAAA6C,UAASC,OAAc,UACvB7C,EAAGM,MAAKC,EAAAmB,GAAA,IAKhB,MAAAoB,EAAAlD,SAAAC,cAAA,a","sources":["src/js/index.js","src/js/websocket.js","node_modules/nanoid/index.browser.js"],"sourcesContent":["import { nanoid } from 'nanoid';\r\nimport { WS } from './websocket';\r\nconst NEW_CHAT = 'Создать новый чат';\r\nconst LOGIN_CHAT = 'Войти в чат';\r\nconst BASE_URL = 'ws://tranquil-reaches-58824.herokuapp.com/'\r\nconst chatFrame = document.querySelector('#historyframe');\r\nconst loginBtn = document.querySelector('.logform-btn');\r\nconst dialog = document.querySelector('.overlay');\r\nconst ws = new WS(messageHandler);\r\n\r\nconst queryString = window.location.search;\r\nconst urlParams = new URLSearchParams(queryString);\r\n\r\nloginBtn.textContent = urlParams.has('chatid') ? LOGIN_CHAT : NEW_CHAT;\r\nconst chatID = urlParams.has('chatid') ? urlParams.get('chatid') : nanoid();\r\n\r\n\r\n\r\nconst postMessage = (name, message) => {\r\n        const newmessage = document.createElement(\"p\");\r\n        newmessage.textContent = `${name}: ${message}`;\r\n        chatFrame.append(newmessage);\r\n}\r\n/* const makeSocket = (name, ID) => {\r\n        ws.login(name, ID)\r\n        ws = new WebSocket(`${BASE_URL}?id=${chatID}&name=${name}`);\r\n        ws.onopen = () => {\r\n                console.log('connected')\r\n                isOnline = true;\r\n            };\r\n        ws.onclose = () => {\r\n                console.log('dis-connected')\r\n                isOnline = false;\r\n            };\r\n        ws.onmessage = response => {\r\n                const info = JSON.parse(response.data);\r\n                postMessage('Vasja', info);\r\n        }\r\n} */\r\n\r\nconst onLogin = e => {\r\n        e.preventDefault();\r\n        const name = e.target.elements.name.value.trim();\r\n        if(name === '') {return;}\r\n        \r\n        dialog.classList.toggle('hidden');\r\n        ws.login(name, chatID);\r\n        \r\n}\r\n\r\nconst loginForm = document.querySelector('.logform');\r\nloginForm.addEventListener('submit', onLogin);\r\n\r\nconst typearea = document.querySelector('#typearea');\r\ntypearea.addEventListener('keydown', evt => {\r\n    if(evt.key === 'Enter') {\r\n        evt.preventDefault();\r\n        const message = typearea.textContent.trim();\r\n        if( message !== \"\") sendMessage(message);}\r\n})\r\n\r\n\r\nfunction sendMessage(m) {\r\n        console.log(m);\r\n        typearea.textContent = '';\r\n        ws.send(m)\r\n}\r\n\r\nfunction messageHandler(m) {\r\n        postMessage('Vasja', m);\r\n}\r\n","export class WS {\r\n\r\n    constructor(messageHandler) {\r\n\r\n        this.message = {};\r\n        this.handler = messageHandler;\r\n        \r\n    }\r\n\r\n    login(name, ID) {\r\n        this.userName = name;\r\n        this.chatID = ID;\r\n        this.ws = new WebSocket(`ws://tranquil-reaches-58824.herokuapp.com/?id=${this.chatID}&name=${this.userName}`);\r\n    }\r\n\r\n    onGetMessage() {\r\n        this.handler(this.message);\r\n    }\r\n\r\n    send() {\r\n\r\n    }\r\n\r\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["$8f6a480bb40b134f$var$chatFrame","document","querySelector","$8f6a480bb40b134f$var$loginBtn","$8f6a480bb40b134f$var$dialog","$8f6a480bb40b134f$var$ws","constructor","messageHandler","this","message","handler","login","name","ID","userName","chatID","ws","WebSocket","onGetMessage","send","newmessage","createElement","textContent","append","$8f6a480bb40b134f$var$queryString","window","location","search","$8f6a480bb40b134f$var$urlParams","URLSearchParams","has","$8f6a480bb40b134f$var$chatID","get","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","addEventListener","e","preventDefault","target","elements","value","trim","classList","toggle","$8f6a480bb40b134f$var$typearea"],"version":3,"file":"index.b08b9e78.js.map"}